{"ast":null,"code":"import React,{useRef,useEffect}from'react';import*as THREE from'three';import{jsx as _jsx}from\"react/jsx-runtime\";const ThreeBackground=()=>{const mountRef=useRef(null);const sceneRef=useRef(null);const rendererRef=useRef(null);const animationIdRef=useRef(null);useEffect(()=>{if(!mountRef.current)return;// Scene setup\nconst scene=new THREE.Scene();sceneRef.current=scene;// Camera setup\nconst camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,0.1,1000);camera.position.z=50;// Renderer setup\nconst renderer=new THREE.WebGLRenderer({alpha:true,antialias:true});renderer.setSize(window.innerWidth,window.innerHeight);renderer.setClearColor(0x000000,0);renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));rendererRef.current=renderer;mountRef.current.appendChild(renderer.domElement);// Create particle system\nconst particleCount=200;const particles=new THREE.BufferGeometry();const positions=new Float32Array(particleCount*3);const colors=new Float32Array(particleCount*3);const sizes=new Float32Array(particleCount);for(let i=0;i<particleCount;i++){// Position\npositions[i*3]=(Math.random()-0.5)*200;positions[i*3+1]=(Math.random()-0.5)*200;positions[i*3+2]=(Math.random()-0.5)*200;// Color - professional blue/purple gradient\nconst color=new THREE.Color();color.setHSL(0.6+Math.random()*0.1,0.8,0.5+Math.random()*0.3);colors[i*3]=color.r;colors[i*3+1]=color.g;colors[i*3+2]=color.b;// Size\nsizes[i]=Math.random()*2+0.5;}particles.setAttribute('position',new THREE.BufferAttribute(positions,3));particles.setAttribute('color',new THREE.BufferAttribute(colors,3));particles.setAttribute('size',new THREE.BufferAttribute(sizes,1));// Particle material\nconst particleMaterial=new THREE.PointsMaterial({size:2,vertexColors:true,transparent:true,opacity:0.6,blending:THREE.AdditiveBlending,depthWrite:false});const particleSystem=new THREE.Points(particles,particleMaterial);scene.add(particleSystem);// Create connecting lines\nconst lineGeometry=new THREE.BufferGeometry();const linePositions=[];const lineColors=[];// Connect nearby particles\nfor(let i=0;i<particleCount;i++){for(let j=i+1;j<particleCount;j++){const distance=Math.sqrt(Math.pow(positions[i*3]-positions[j*3],2)+Math.pow(positions[i*3+1]-positions[j*3+1],2)+Math.pow(positions[i*3+2]-positions[j*3+2],2));if(distance<30){linePositions.push(positions[i*3],positions[i*3+1],positions[i*3+2],positions[j*3],positions[j*3+1],positions[j*3+2]);const opacity=1-distance/30;lineColors.push(0.4,0.6,1,opacity,0.4,0.6,1,opacity);}}}if(linePositions.length>0){lineGeometry.setAttribute('position',new THREE.Float32BufferAttribute(linePositions,3));lineGeometry.setAttribute('color',new THREE.Float32BufferAttribute(lineColors,4));const lineMaterial=new THREE.LineBasicMaterial({vertexColors:true,transparent:true,opacity:0.3,blending:THREE.AdditiveBlending});const lines=new THREE.LineSegments(lineGeometry,lineMaterial);scene.add(lines);}// Animation\nconst animate=()=>{animationIdRef.current=requestAnimationFrame(animate);// Rotate particle system slowly\nparticleSystem.rotation.x+=0.001;particleSystem.rotation.y+=0.002;// Move particles slightly\nconst positions=particleSystem.geometry.attributes.position.array;for(let i=0;i<positions.length;i+=3){positions[i+1]+=Math.sin(Date.now()*0.001+i)*0.01;}particleSystem.geometry.attributes.position.needsUpdate=true;renderer.render(scene,camera);};animate();// Handle resize\nconst handleResize=()=>{camera.aspect=window.innerWidth/window.innerHeight;camera.updateProjectionMatrix();renderer.setSize(window.innerWidth,window.innerHeight);};window.addEventListener('resize',handleResize);// Cleanup\nreturn()=>{window.removeEventListener('resize',handleResize);if(animationIdRef.current){cancelAnimationFrame(animationIdRef.current);}if(mountRef.current&&renderer.domElement){mountRef.current.removeChild(renderer.domElement);}renderer.dispose();};},[]);return/*#__PURE__*/_jsx(\"div\",{ref:mountRef,className:\"fixed inset-0 -z-10\",style:{pointerEvents:'none'}});};export default ThreeBackground;","map":{"version":3,"names":["React","useRef","useEffect","THREE","jsx","_jsx","ThreeBackground","mountRef","sceneRef","rendererRef","animationIdRef","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","alpha","antialias","setSize","setClearColor","setPixelRatio","Math","min","devicePixelRatio","appendChild","domElement","particleCount","particles","BufferGeometry","positions","Float32Array","colors","sizes","i","random","color","Color","setHSL","r","g","b","setAttribute","BufferAttribute","particleMaterial","PointsMaterial","size","vertexColors","transparent","opacity","blending","AdditiveBlending","depthWrite","particleSystem","Points","add","lineGeometry","linePositions","lineColors","j","distance","sqrt","pow","push","length","Float32BufferAttribute","lineMaterial","LineBasicMaterial","lines","LineSegments","animate","requestAnimationFrame","rotation","x","y","geometry","attributes","array","sin","Date","now","needsUpdate","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","cancelAnimationFrame","removeChild","dispose","ref","className","style","pointerEvents"],"sources":["C:/Users/evank/OneDrive/Desktop/projects/Bolt Hackathon/src/components/ThreeBackground.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst ThreeBackground = () => {\r\n    const mountRef = useRef(null);\r\n    const sceneRef = useRef(null);\r\n    const rendererRef = useRef(null);\r\n    const animationIdRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!mountRef.current) return;\r\n\r\n        // Scene setup\r\n        const scene = new THREE.Scene();\r\n        sceneRef.current = scene;\r\n\r\n        // Camera setup\r\n        const camera = new THREE.PerspectiveCamera(\r\n            75,\r\n            window.innerWidth / window.innerHeight,\r\n            0.1,\r\n            1000\r\n        );\r\n        camera.position.z = 50;\r\n\r\n        // Renderer setup\r\n        const renderer = new THREE.WebGLRenderer({\r\n            alpha: true,\r\n            antialias: true\r\n        });\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        renderer.setClearColor(0x000000, 0);\r\n        renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\r\n        rendererRef.current = renderer;\r\n\r\n        mountRef.current.appendChild(renderer.domElement);\r\n\r\n        // Create particle system\r\n        const particleCount = 200;\r\n        const particles = new THREE.BufferGeometry();\r\n        const positions = new Float32Array(particleCount * 3);\r\n        const colors = new Float32Array(particleCount * 3);\r\n        const sizes = new Float32Array(particleCount);\r\n\r\n        for (let i = 0; i < particleCount; i++) {\r\n            // Position\r\n            positions[i * 3] = (Math.random() - 0.5) * 200;\r\n            positions[i * 3 + 1] = (Math.random() - 0.5) * 200;\r\n            positions[i * 3 + 2] = (Math.random() - 0.5) * 200;\r\n\r\n            // Color - professional blue/purple gradient\r\n            const color = new THREE.Color();\r\n            color.setHSL(0.6 + Math.random() * 0.1, 0.8, 0.5 + Math.random() * 0.3);\r\n            colors[i * 3] = color.r;\r\n            colors[i * 3 + 1] = color.g;\r\n            colors[i * 3 + 2] = color.b;\r\n\r\n            // Size\r\n            sizes[i] = Math.random() * 2 + 0.5;\r\n        }\r\n\r\n        particles.setAttribute('position', new THREE.BufferAttribute(positions, 3));\r\n        particles.setAttribute('color', new THREE.BufferAttribute(colors, 3));\r\n        particles.setAttribute('size', new THREE.BufferAttribute(sizes, 1));\r\n\r\n        // Particle material\r\n        const particleMaterial = new THREE.PointsMaterial({\r\n            size: 2,\r\n            vertexColors: true,\r\n            transparent: true,\r\n            opacity: 0.6,\r\n            blending: THREE.AdditiveBlending,\r\n            depthWrite: false\r\n        });\r\n\r\n        const particleSystem = new THREE.Points(particles, particleMaterial);\r\n        scene.add(particleSystem);\r\n\r\n        // Create connecting lines\r\n        const lineGeometry = new THREE.BufferGeometry();\r\n        const linePositions = [];\r\n        const lineColors = [];\r\n\r\n        // Connect nearby particles\r\n        for (let i = 0; i < particleCount; i++) {\r\n            for (let j = i + 1; j < particleCount; j++) {\r\n                const distance = Math.sqrt(\r\n                    Math.pow(positions[i * 3] - positions[j * 3], 2) +\r\n                    Math.pow(positions[i * 3 + 1] - positions[j * 3 + 1], 2) +\r\n                    Math.pow(positions[i * 3 + 2] - positions[j * 3 + 2], 2)\r\n                );\r\n\r\n                if (distance < 30) {\r\n                    linePositions.push(\r\n                        positions[i * 3], positions[i * 3 + 1], positions[i * 3 + 2],\r\n                        positions[j * 3], positions[j * 3 + 1], positions[j * 3 + 2]\r\n                    );\r\n\r\n                    const opacity = 1 - (distance / 30);\r\n                    lineColors.push(\r\n                        0.4, 0.6, 1, opacity,\r\n                        0.4, 0.6, 1, opacity\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        if (linePositions.length > 0) {\r\n            lineGeometry.setAttribute('position', new THREE.Float32BufferAttribute(linePositions, 3));\r\n            lineGeometry.setAttribute('color', new THREE.Float32BufferAttribute(lineColors, 4));\r\n\r\n            const lineMaterial = new THREE.LineBasicMaterial({\r\n                vertexColors: true,\r\n                transparent: true,\r\n                opacity: 0.3,\r\n                blending: THREE.AdditiveBlending\r\n            });\r\n\r\n            const lines = new THREE.LineSegments(lineGeometry, lineMaterial);\r\n            scene.add(lines);\r\n        }\r\n\r\n        // Animation\r\n        const animate = () => {\r\n            animationIdRef.current = requestAnimationFrame(animate);\r\n\r\n            // Rotate particle system slowly\r\n            particleSystem.rotation.x += 0.001;\r\n            particleSystem.rotation.y += 0.002;\r\n\r\n            // Move particles slightly\r\n            const positions = particleSystem.geometry.attributes.position.array;\r\n            for (let i = 0; i < positions.length; i += 3) {\r\n                positions[i + 1] += Math.sin(Date.now() * 0.001 + i) * 0.01;\r\n            }\r\n            particleSystem.geometry.attributes.position.needsUpdate = true;\r\n\r\n            renderer.render(scene, camera);\r\n        };\r\n\r\n        animate();\r\n\r\n        // Handle resize\r\n        const handleResize = () => {\r\n            camera.aspect = window.innerWidth / window.innerHeight;\r\n            camera.updateProjectionMatrix();\r\n            renderer.setSize(window.innerWidth, window.innerHeight);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        // Cleanup\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n            if (animationIdRef.current) {\r\n                cancelAnimationFrame(animationIdRef.current);\r\n            }\r\n            if (mountRef.current && renderer.domElement) {\r\n                mountRef.current.removeChild(renderer.domElement);\r\n            }\r\n            renderer.dispose();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div\r\n            ref={mountRef}\r\n            className=\"fixed inset-0 -z-10\"\r\n            style={{ pointerEvents: 'none' }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ThreeBackground; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}