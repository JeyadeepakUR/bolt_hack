{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\evank\\\\OneDrive\\\\Desktop\\\\projects\\\\Bolt Hackathon\\\\src\\\\components\\\\ThreeBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeBackground = () => {\n  _s();\n  const mountRef = useRef();\n  useEffect(() => {\n    let renderer, scene, camera, material, mesh, animationId;\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n\n    // Scene setup\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    camera.position.z = 1;\n    renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    renderer.setClearColor(0x000000, 0); // transparent\n    renderer.setSize(width, height);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Create a plane with a custom shader for flowing gradients\n    const geometry = new THREE.PlaneGeometry(2, 2);\n    const uniforms = {\n      u_time: {\n        value: 0.0\n      },\n      u_color1: {\n        value: new THREE.Color('#0a192f')\n      },\n      u_color2: {\n        value: new THREE.Color('#3b82f6')\n      },\n      u_color3: {\n        value: new THREE.Color('#2dd4bf')\n      }\n    };\n    material = new THREE.ShaderMaterial({\n      uniforms,\n      vertexShader: `\n                varying vec2 vUv;\n                void main() {\n                    vUv = uv;\n                    gl_Position = vec4(position, 1.0);\n                }\n            `,\n      fragmentShader: `\n                uniform float u_time;\n                uniform vec3 u_color1;\n                uniform vec3 u_color2;\n                uniform vec3 u_color3;\n                varying vec2 vUv;\n                void main() {\n                    float wave = sin(vUv.x * 8.0 + u_time * 0.5) * 0.08 + cos(vUv.y * 6.0 + u_time * 0.7) * 0.08;\n                    float blend = smoothstep(0.3 + wave, 0.7 - wave, vUv.y);\n                    vec3 color = mix(u_color1, u_color2, vUv.y + 0.1 * sin(u_time + vUv.x * 2.0));\n                    color = mix(color, u_color3, 0.2 + 0.2 * sin(u_time + vUv.x * 3.0 + vUv.y * 2.0));\n                    gl_FragColor = vec4(color, 0.85);\n                }\n            `,\n      transparent: true\n    });\n    mesh = new THREE.Mesh(geometry, material);\n    scene.add(mesh);\n\n    // Animation loop\n    const animate = () => {\n      material.uniforms.u_time.value += 0.01;\n      renderer.render(scene, camera);\n      animationId = requestAnimationFrame(animate);\n    };\n    animate();\n\n    // Handle resize\n    const handleResize = () => {\n      width = window.innerWidth;\n      height = window.innerHeight;\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      cancelAnimationFrame(animationId);\n      window.removeEventListener('resize', handleResize);\n      mountRef.current.removeChild(renderer.domElement);\n      renderer.dispose();\n      geometry.dispose();\n      material.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100vw',\n      height: '100vh',\n      zIndex: 0,\n      pointerEvents: 'none'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(ThreeBackground, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ThreeBackground;\nexport default ThreeBackground;\nvar _c;\n$RefreshReg$(_c, \"ThreeBackground\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","jsxDEV","_jsxDEV","ThreeBackground","_s","mountRef","renderer","scene","camera","material","mesh","animationId","width","window","innerWidth","height","innerHeight","Scene","PerspectiveCamera","position","z","WebGLRenderer","antialias","alpha","setClearColor","setSize","setPixelRatio","devicePixelRatio","current","appendChild","domElement","geometry","PlaneGeometry","uniforms","u_time","value","u_color1","Color","u_color2","u_color3","ShaderMaterial","vertexShader","fragmentShader","transparent","Mesh","add","animate","render","requestAnimationFrame","handleResize","aspect","updateProjectionMatrix","addEventListener","cancelAnimationFrame","removeEventListener","removeChild","dispose","ref","style","top","left","zIndex","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/evank/OneDrive/Desktop/projects/Bolt Hackathon/src/components/ThreeBackground.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst ThreeBackground = () => {\r\n    const mountRef = useRef();\r\n\r\n    useEffect(() => {\r\n        let renderer, scene, camera, material, mesh, animationId;\r\n        let width = window.innerWidth;\r\n        let height = window.innerHeight;\r\n\r\n        // Scene setup\r\n        scene = new THREE.Scene();\r\n        camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\r\n        camera.position.z = 1;\r\n\r\n        renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n        renderer.setClearColor(0x000000, 0); // transparent\r\n        renderer.setSize(width, height);\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n        mountRef.current.appendChild(renderer.domElement);\r\n\r\n        // Create a plane with a custom shader for flowing gradients\r\n        const geometry = new THREE.PlaneGeometry(2, 2);\r\n        const uniforms = {\r\n            u_time: { value: 0.0 },\r\n            u_color1: { value: new THREE.Color('#0a192f') },\r\n            u_color2: { value: new THREE.Color('#3b82f6') },\r\n            u_color3: { value: new THREE.Color('#2dd4bf') },\r\n        };\r\n        material = new THREE.ShaderMaterial({\r\n            uniforms,\r\n            vertexShader: `\r\n                varying vec2 vUv;\r\n                void main() {\r\n                    vUv = uv;\r\n                    gl_Position = vec4(position, 1.0);\r\n                }\r\n            `,\r\n            fragmentShader: `\r\n                uniform float u_time;\r\n                uniform vec3 u_color1;\r\n                uniform vec3 u_color2;\r\n                uniform vec3 u_color3;\r\n                varying vec2 vUv;\r\n                void main() {\r\n                    float wave = sin(vUv.x * 8.0 + u_time * 0.5) * 0.08 + cos(vUv.y * 6.0 + u_time * 0.7) * 0.08;\r\n                    float blend = smoothstep(0.3 + wave, 0.7 - wave, vUv.y);\r\n                    vec3 color = mix(u_color1, u_color2, vUv.y + 0.1 * sin(u_time + vUv.x * 2.0));\r\n                    color = mix(color, u_color3, 0.2 + 0.2 * sin(u_time + vUv.x * 3.0 + vUv.y * 2.0));\r\n                    gl_FragColor = vec4(color, 0.85);\r\n                }\r\n            `,\r\n            transparent: true,\r\n        });\r\n        mesh = new THREE.Mesh(geometry, material);\r\n        scene.add(mesh);\r\n\r\n        // Animation loop\r\n        const animate = () => {\r\n            material.uniforms.u_time.value += 0.01;\r\n            renderer.render(scene, camera);\r\n            animationId = requestAnimationFrame(animate);\r\n        };\r\n        animate();\r\n\r\n        // Handle resize\r\n        const handleResize = () => {\r\n            width = window.innerWidth;\r\n            height = window.innerHeight;\r\n            renderer.setSize(width, height);\r\n            camera.aspect = width / height;\r\n            camera.updateProjectionMatrix();\r\n        };\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        // Cleanup\r\n        return () => {\r\n            cancelAnimationFrame(animationId);\r\n            window.removeEventListener('resize', handleResize);\r\n            mountRef.current.removeChild(renderer.domElement);\r\n            renderer.dispose();\r\n            geometry.dispose();\r\n            material.dispose();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div\r\n            ref={mountRef}\r\n            style={{\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                width: '100vw',\r\n                height: '100vh',\r\n                zIndex: 0,\r\n                pointerEvents: 'none',\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ThreeBackground; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGP,MAAM,CAAC,CAAC;EAEzBC,SAAS,CAAC,MAAM;IACZ,IAAIO,QAAQ,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,WAAW;IACxD,IAAIC,KAAK,GAAGC,MAAM,CAACC,UAAU;IAC7B,IAAIC,MAAM,GAAGF,MAAM,CAACG,WAAW;;IAE/B;IACAT,KAAK,GAAG,IAAIP,KAAK,CAACiB,KAAK,CAAC,CAAC;IACzBT,MAAM,GAAG,IAAIR,KAAK,CAACkB,iBAAiB,CAAC,EAAE,EAAEN,KAAK,GAAGG,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC;IACnEP,MAAM,CAACW,QAAQ,CAACC,CAAC,GAAG,CAAC;IAErBd,QAAQ,GAAG,IAAIN,KAAK,CAACqB,aAAa,CAAC;MAAEC,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACpEjB,QAAQ,CAACkB,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;IACrClB,QAAQ,CAACmB,OAAO,CAACb,KAAK,EAAEG,MAAM,CAAC;IAC/BT,QAAQ,CAACoB,aAAa,CAACb,MAAM,CAACc,gBAAgB,CAAC;IAC/CtB,QAAQ,CAACuB,OAAO,CAACC,WAAW,CAACvB,QAAQ,CAACwB,UAAU,CAAC;;IAEjD;IACA,MAAMC,QAAQ,GAAG,IAAI/B,KAAK,CAACgC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;IAC9C,MAAMC,QAAQ,GAAG;MACbC,MAAM,EAAE;QAAEC,KAAK,EAAE;MAAI,CAAC;MACtBC,QAAQ,EAAE;QAAED,KAAK,EAAE,IAAInC,KAAK,CAACqC,KAAK,CAAC,SAAS;MAAE,CAAC;MAC/CC,QAAQ,EAAE;QAAEH,KAAK,EAAE,IAAInC,KAAK,CAACqC,KAAK,CAAC,SAAS;MAAE,CAAC;MAC/CE,QAAQ,EAAE;QAAEJ,KAAK,EAAE,IAAInC,KAAK,CAACqC,KAAK,CAAC,SAAS;MAAE;IAClD,CAAC;IACD5B,QAAQ,GAAG,IAAIT,KAAK,CAACwC,cAAc,CAAC;MAChCP,QAAQ;MACRQ,YAAY,EAAE;AAC1B;AACA;AACA;AACA;AACA;AACA,aAAa;MACDC,cAAc,EAAE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;MACDC,WAAW,EAAE;IACjB,CAAC,CAAC;IACFjC,IAAI,GAAG,IAAIV,KAAK,CAAC4C,IAAI,CAACb,QAAQ,EAAEtB,QAAQ,CAAC;IACzCF,KAAK,CAACsC,GAAG,CAACnC,IAAI,CAAC;;IAEf;IACA,MAAMoC,OAAO,GAAGA,CAAA,KAAM;MAClBrC,QAAQ,CAACwB,QAAQ,CAACC,MAAM,CAACC,KAAK,IAAI,IAAI;MACtC7B,QAAQ,CAACyC,MAAM,CAACxC,KAAK,EAAEC,MAAM,CAAC;MAC9BG,WAAW,GAAGqC,qBAAqB,CAACF,OAAO,CAAC;IAChD,CAAC;IACDA,OAAO,CAAC,CAAC;;IAET;IACA,MAAMG,YAAY,GAAGA,CAAA,KAAM;MACvBrC,KAAK,GAAGC,MAAM,CAACC,UAAU;MACzBC,MAAM,GAAGF,MAAM,CAACG,WAAW;MAC3BV,QAAQ,CAACmB,OAAO,CAACb,KAAK,EAAEG,MAAM,CAAC;MAC/BP,MAAM,CAAC0C,MAAM,GAAGtC,KAAK,GAAGG,MAAM;MAC9BP,MAAM,CAAC2C,sBAAsB,CAAC,CAAC;IACnC,CAAC;IACDtC,MAAM,CAACuC,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAM;MACTI,oBAAoB,CAAC1C,WAAW,CAAC;MACjCE,MAAM,CAACyC,mBAAmB,CAAC,QAAQ,EAAEL,YAAY,CAAC;MAClD5C,QAAQ,CAACuB,OAAO,CAAC2B,WAAW,CAACjD,QAAQ,CAACwB,UAAU,CAAC;MACjDxB,QAAQ,CAACkD,OAAO,CAAC,CAAC;MAClBzB,QAAQ,CAACyB,OAAO,CAAC,CAAC;MAClB/C,QAAQ,CAAC+C,OAAO,CAAC,CAAC;IACtB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACItD,OAAA;IACIuD,GAAG,EAAEpD,QAAS;IACdqD,KAAK,EAAE;MACHvC,QAAQ,EAAE,OAAO;MACjBwC,GAAG,EAAE,CAAC;MACNC,IAAI,EAAE,CAAC;MACPhD,KAAK,EAAE,OAAO;MACdG,MAAM,EAAE,OAAO;MACf8C,MAAM,EAAE,CAAC;MACTC,aAAa,EAAE;IACnB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAC9D,EAAA,CAlGID,eAAe;AAAAgE,EAAA,GAAfhE,eAAe;AAoGrB,eAAeA,eAAe;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}